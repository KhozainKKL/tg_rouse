import json
import urllib

import requests
from asgiref.sync import async_to_sync, sync_to_async
from django.http import JsonResponse
from django.shortcuts import render
from django.template import Template, Context
from rest_framework.response import Response
from rest_framework.request import Request
from telebot.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton
from rest_framework.views import APIView
from bot.main_bot import bot
from telebot import types

from config.database.response_bot import DatabaseRequestToBot as db


@bot.message_handler(commands=['start'])
async def start_message(message):
    data = {
        'name': await db.get_all_product(),
    }
    # URL –≤–∞—à–µ–π –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
    base_url = 'https://khozainkkl.github.io/tg_rouse.github.io/config/static/templates/index.html'
    # –ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç URL –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Ö –∫ URL –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
    encoded_data = urllib.parse.urlencode(data)
    web_page_url = f'{base_url}?{encoded_data}'

    markup = ReplyKeyboardMarkup()
    markup.add(KeyboardButton('–û—Ç–∫—Ä—ã—Ç—å –≤–µ–± —Å—Ç—Ä–∞–Ω–∏—Ü—É', web_app=WebAppInfo(
        url=web_page_url)))
    await bot.send_message(chat_id=message.chat.id, text='–ü—Ä–∏–≤–µ—Ç.', reply_markup=markup)


@bot.message_handler(commands=['cart'])
async def cart(message):
    encoded_data = urllib.parse.quote(json.dumps(await db.get_all_product()))
    url = f"https://khozainkkl.github.io/tg_rouse.github.io/config/static/templates/cart.html?product={encoded_data}"
    markup = ReplyKeyboardMarkup()
    markup.add(KeyboardButton('–ö–æ—Ä–∑–∏–Ω–∞ üß∫', web_app=WebAppInfo(
        url=url)))
    await bot.send_message(chat_id=message.chat.id, text='–ü—Ä–∏–≤–µ—Ç.', reply_markup=markup)

    # @bot.message_handler(content_types=['web_app_data'])
    # async def ordering_complete_cart(message):
    #     prod = json.loads(message.web_app_data.data)
    #
    #     await bot.send_message(chat_id=message.chat.id, text=prod)


@bot.message_handler(commands=['search'])
async def search_product(message):
    products = await db.post_search_product()
    encoded_sort = urllib.parse.quote(json.dumps(products))

    url = (
        f"https://khozainkkl.github.io/tg_rouse.github.io/config/static/templates/search.html?product={encoded_sort}")
    markup = ReplyKeyboardMarkup()
    markup.add(KeyboardButton('–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞ üîé', web_app=WebAppInfo(
        url=url)))
    await bot.send_message(chat_id=message.chat.id, text='–ü—Ä–∏–≤–µ—Ç.', reply_markup=markup)

    @bot.message_handler(content_types=['web_app_data'])
    async def result_search_product(message: Request):
        prod = await db.get_search_product(data=json.loads(message.web_app_data.data))
        if not prod:
            await bot.send_message(chat_id=message.chat.id, text='–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.')
        if prod:
            keyb_list_search_prod = InlineKeyboardMarkup()
            print(prod)
            for item in prod:
                keyb_list_search_prod.add(
                    InlineKeyboardButton(text=f'{item["name"]}', callback_data=f'data_{item["name"]}'))

            await bot.send_message(chat_id=message.chat.id, text='–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã',
                                   reply_markup=keyb_list_search_prod)

            @bot.callback_query_handler(lambda query: query.data.startswith('data_'))
            async def post_details_search_product(query):
                date = query.data.split('_')[1]
                keyb_details_product = InlineKeyboardMarkup(row_width=1)
                keyb_details_product.add(InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É üß∫', callback_data='2'),
                                         InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back_to_list_search_product')
                                         )
                for items in prod:
                    if items['name'] == date:
                        text = (f'–ù–∞–∑–≤–∞–Ω–∏–µ: {items["name"]}\n'
                                f'–û–ø–∏—Å–∞–Ω–∏–µ: {items["description"]}\n'
                                f'–¶–µ–Ω–∞: {items["price"]}\n'
                                f'<a href="https://khozainkkl.github.io/tg_rouse.github.io/config/media/{items["image"]}">‚ÄÉ</a>')
                await bot.edit_message_text(chat_id=query.message.chat.id, text=text,
                                            message_id=query.message.message_id,
                                            reply_markup=keyb_details_product)

                @bot.callback_query_handler(func=lambda call: call.data == "back_to_list_search_product")
                async def back_to_list_search_product(call):
                    await bot.edit_message_text(chat_id=call.message.chat.id, text='–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã',
                                                message_id=call.message.message_id, reply_markup=keyb_list_search_prod)


@bot.message_handler(func=lambda message: True)
async def start_message(message):
    await bot.send_message(chat_id=message.chat.id, text='–ü—Ä–∏–≤–µ—Ç, —á–µ–ª–æ–≤–µ–∫.')
